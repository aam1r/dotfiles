# Syntax-highlight JSON strings or files
# Usage: `json '{"foo":42}'` or `echo '{"foo":42}' | json`
function json() {
	if [ -t 0 ]; then # argument
		python -mjson.tool <<< "$*" | pygmentize -l javascript
	else # pipe
		python -mjson.tool | pygmentize -l javascript
	fi
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh
	else
		local arg=-sh
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@"
	else
		du $arg .[^.]* *
	fi
}

# Open all files for the current commit in vim
function opencommit {
    vim -p $(git diff HEAD^ --name-only)
}

# Wait for pid to finish executing
# Usage: waitforpid 311
function waitforpid {
    while ps -p $1 1>/dev/null 2> /dev/null; do
        sleep 1;
    done
}

# Wait for process to finish executing
# Usage: waitforprocess myscript.py
function waitforprocess {
    while ps -p $(pgrep $1) 1>/dev/null 2> /dev/null; do
        sleep 1;
    done
}

# Returns the number of seconds a process has been alive by looking at /proc
function pid_seconds {
    echo $(($(date +%s) - $(stat -c '%Y' /proc/$1)))
}

# Find a useable SSH agent when running an agent session
ssh-reagent () {
    for agent in /tmp/ssh-*/agent.*; do
        echo "Trying $agent"
        export SSH_AUTH_SOCK=$agent
        if timeout -t 2 ssh-add -l 2>&1 > /dev/null; then
            echo Found working SSH Agent:
            ssh-add -l
            return
        fi
    done
    echo Cannot find ssh agent - maybe you should reconnect and forward it?
}

# Serve files under current dir at http://localhost:8000
function webserver {
    python -m SimpleHTTPServer
}

function extract () {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}
